##########
Quickstart
##########

.. meta::
   :description: Quick introduction to using BPTK-Py business simulation framework.
   :keywords: agent-based modeling, abm, system dynamics, systemdynamics, bptk, bptk-py, python, business simulation


The best way to get started with the *Business Prototyping Toolkit for Python* (BPTK-Py) is to download the BPTK-Py Tutorial. The tutorial contains Jupyter notebooks and example models that illustrate how to use the BPTK_Py framework to build models in Python System Dynamics, agent-based modeling and how to transpile models in XMILE format.

You can clone or download the tutorial from our `git repository <https://github.com/transentis/bptk_py_tutorial/>`_ on Github.

The tutorial illustrates how to use the BPTK_PY framework, it contains interactive Jupyter notebooks for each of the documents in this documentation.

The tutorial and this documentation illustrate the framework using two simulation models: the *Simple Project Management Model* and the *Customer Acquisition* model.

* *Simple Project Management Model*. This model is an illustration of `Parkinson's law <https://en.wikipedia.org/wiki/Parkinson%27s_law>`_, which states that work expands so as to fill the time available for its completion.
* *Customer Acquisition Model*. This model is an illustration of the `Bass Diffusion Model <https://en.wikipedia.org/wiki/Bass_diffusion_model>`_ that describes the process of how new products get adopted in a population. The Bass model has been widely used in forecasting, especially in new productsâ€™ sales forecasting and technology forecasting.

The logic of these models is not discussed in detail in this documentation, you can read more about them on our blog:

* The simple project management model is explained in our `Step-by-step introduction to System Dynamics <https://www.transentis.com/step-by-step-tutorials/introduction-to-system-dynamics/>`_.
* The `Customer Acquisition Model <https://www.transentis.com/an-example-to-illustrate-the-business-prototyping-methodology/>`_ is discussed in a series of blog posts illustrating the Business Prototyping Methodology.


